apiVersion: apps/v1
kind: Deployment
metadata:
  name: debezium-connect
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: debezium-connect
  template:
    metadata:
      labels:
        app: debezium-connect
    spec:
      containers:
      - name: debezium-connect
        image: debezium/connect:2.3
        ports:
        - containerPort: 8083
        env:
        - name: BOOTSTRAP_SERVERS
          value: "kafka-service:9092"
        - name: GROUP_ID
          value: "1"
        - name: CONFIG_STORAGE_TOPIC
          value: "debezium-connect-configs"
        - name: OFFSET_STORAGE_TOPIC
          value: "debezium-connect-offsets"
        - name: STATUS_STORAGE_TOPIC
          value: "debezium-connect-status"
---
apiVersion: v1
kind: Service
metadata:
  name: debezium-connect
  namespace: default
spec:
  selector:
    app: debezium-connect
  ports:
    - port: 8083
      targetPort: 8083


# # k8_configs/debezium-deployment.yaml
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: debezium-connect
#   namespace: default
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: debezium-connect
#   template:
#     metadata:
#       labels:
#         app: debezium-connect
#     spec:
#       initContainers:
#         - name: register-connector
#           image: curlimages/curl
#           command:
#             - /bin/sh
#             - -c
#             - |
#               # Debezium 서비스가 준비될 때까지 대기
#               while ! curl -s http://debezium:8083/connectors > /dev/null; do
#                 echo "Waiting for Debezium to be ready..."
#                 sleep 5
#               done
              
#               # Connector 등록
#               curl -X POST -H "Content-Type: application/json" \
#                 -d '{
#                   "name": "outbox-connector",
#                   "config": {
#                     "connector.class": "io.debezium.connector.mysql.MySqlConnector",
#                     "database.hostname": "mysql-service",
#                     "database.port": "3306",
#                     "database.user": "root",
#                     "database.password": "root",
#                     "database.server.id": "184054",
#                     "topic.prefix": "dbserver",
#                     "database.server.name": "dbserver",
#                     "database.include.list": "product_category",
#                     "table.include.list": "product_category.outbox",
#                     "schema.history.internal.kafka.bootstrap.servers": "kafka-service:9092",
#                     "schema.history.internal.kafka.topic": "schema-changes.outbox",
#                     "transforms": "outbox",
#                     "transforms.outbox.type": "io.debezium.transforms.outbox.EventRouter",
#                     "transforms.outbox.route.by.field": "aggregatetype",
#                     "transforms.outbox.route.topic.replacement": "${routedByValue}",
#                     "transforms.outbox.route.key.field": "aggregateid",
#                     "transforms.outbox.table.field.event.payload": "payload",
#                     "transforms.outbox.table.fields.additional.placement": "type:header:eventType",
#                     "errors.tolerance": "all",
#                     "errors.log.enable": true,
#                     "errors.log.include.messages": true,
#                     "errors.deadletterqueue.topic.name": "outbox-dlq",
#                     "errors.deadletterqueue.context.headers.enable": true,
#                     "max.retries": 3,
#                     "retry.backoff.ms": 1000
#                   }
#                 }' \
#                 http://localhost:8083/connectors
#       containers:
#       - name: debezium-connect
#         image: debezium/connect:2.3
#         ports:
#         - containerPort: 8083
#         env:
#         - name: BOOTSTRAP_SERVERS
#           value: "kafka-service:9092"
#         - name: GROUP_ID
#           value: "1"
#         - name: CONFIG_STORAGE_TOPIC
#           value: "debezium-connect-configs"
#         - name: OFFSET_STORAGE_TOPIC
#           value: "debezium-connect-offsets"
#         - name: STATUS_STORAGE_TOPIC
#           value: "debezium-connect-status"
#       #   volumeMounts:
#       #   - name: connector-config
#       #     mountPath: /opt/kafka/config/connector-config.json
#       #     subPath: connector-config.json
#       # volumes:
#       # - name: connector-config
#       #   configMap:
#       #     name: debezium-connector-config